PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS Users (
    userID INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    contact TEXT NOT NULL,
    type TEXT NOT NULL CHECK(type IN ('patient', 'doctor', 'receptionist', 'admin'))
);

CREATE TABLE IF NOT EXISTS Patients (
    patientID INTEGER PRIMARY KEY AUTOINCREMENT,
    userID INTEGER NOT NULL UNIQUE,
    age INTEGER NOT NULL,
    gender TEXT NOT NULL,
    FOREIGN KEY (userID) REFERENCES Users(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Doctors (
    doctorID INTEGER PRIMARY KEY AUTOINCREMENT,
    userID INTEGER NOT NULL UNIQUE,
    specialization TEXT NOT NULL,
    FOREIGN KEY (userID) REFERENCES Users(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Receptionists (
    receptionistID INTEGER PRIMARY KEY AUTOINCREMENT,
    userID INTEGER NOT NULL UNIQUE,
    FOREIGN KEY (userID) REFERENCES Users(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Admins (
    adminID INTEGER PRIMARY KEY AUTOINCREMENT,
    userID INTEGER NOT NULL UNIQUE,
    FOREIGN KEY (userID) REFERENCES Users(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Reports (
    reportID INTEGER PRIMARY KEY AUTOINCREMENT,
    doctorID INTEGER NOT NULL,
    details TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (doctorID) REFERENCES Doctors(doctorID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Appointments (
    appointmentID INTEGER PRIMARY KEY AUTOINCREMENT,
    patientID INTEGER NOT NULL,
    doctorID INTEGER NOT NULL,
    date TEXT NOT NULL,
    time TEXT NOT NULL,
    status TEXT DEFAULT 'scheduled' CHECK(status IN ('scheduled', 'completed', 'cancelled')),
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (patientID) REFERENCES Patients(patientID) ON DELETE CASCADE,
    FOREIGN KEY (doctorID) REFERENCES Doctors(doctorID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MedicalRecords (
    recordID INTEGER PRIMARY KEY AUTOINCREMENT,
    patientID INTEGER NOT NULL,
    doctorID INTEGER NOT NULL,
    diagnosis TEXT NOT NULL,
    treatment TEXT NOT NULL,
    date TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (patientID) REFERENCES Patients(patientID) ON DELETE CASCADE,
    FOREIGN KEY (doctorID) REFERENCES Doctors(doctorID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Prescriptions (
    prescriptionID INTEGER PRIMARY KEY AUTOINCREMENT,
    doctorID INTEGER NOT NULL,
    patientID INTEGER NOT NULL,
    medicine TEXT NOT NULL,
    dosage TEXT NOT NULL,
    date TEXT NOT NULL,
    FOREIGN KEY (doctorID) REFERENCES Doctors(doctorID),
    FOREIGN KEY (patientID) REFERENCES Patients(patientID)
);

CREATE TABLE IF NOT EXISTS Admins (
    adminID INTEGER PRIMARY KEY,
    userID INTEGER NOT NULL,
    FOREIGN KEY (userID) REFERENCES Users(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Reports (
    reportID INTEGER PRIMARY KEY AUTOINCREMENT,
    adminID INTEGER NOT NULL,
    reportType TEXT NOT NULL,
    generatedDate TEXT DEFAULT CURRENT_TIMESTAMP,
    content TEXT NOT NULL,
    FOREIGN KEY (adminID) REFERENCES Admins(adminID)
);